<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tambah Produk</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/simplePagination.css">
</head>
<body>    
    <div class="container my-5">
        <h1 class="mb-3">Sunting Produk</h1>
        <form method="post">
            <div class="form-group row">
                <label for="code" class="col-12 col-md-3 col-form-label">Kode produk</label>
                <div class="col-9">
                    <input class="form-control" type="text" name="code" id="code">
                    <div class="invalid-feedback" id="codeError"></div>
                </div>
            </div>
            <div class="form-group row">
                <label for="name" class="col-12 col-md-3 col-form-label">Nama produk</label>
                <div class="col-9">
                    <input class="form-control" type="text" name="name" id="name">
                    <div class="invalid-feedback" id="nameError"></div>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12 col-md-3 mb-3 mb-md-0">Varian</div>
                <div class="col-12 col-md-9" id="variant"></div>
            </div>
            <button type="submit" class="btn btn-success">Simpan perubahan</button>
            <a href="/product" class="btn btn-secondary ml-2">Kembali</a>
        </form>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js"></script>
    <script src="/js/jquery.simplePagination.js"></script>
    <script>
        let productVariantData = [];
        let errors = null;

        $("document").ready(function() {
            addProductVariant();
        });

        function renderProductVariant(productVariants) {
            const el = $("#variant");
            el.html("");
            productVariants.forEach((productVariant, index) => {
                if (!productVariant.deletedAt) {
                    el.append(
                        '<div id="productVariants['+index+']" class="border rounded py-2 px-3 w-100 mb-3">' +
                            '<div class="form-group row">' +
                                '<label for="storageType" class="col-md-5 col-form-label">Lokasi penyimpanan</label>' +
                                '<div class="col-md-7">' +
                                    '<select class="custom-select" name="storageType['+index+']" id="storageType['+index+']" style="width: initial;" data-key="storageType" data-index="'+index+'" onchange="onChangeProductVariantInput(this)">' +
                                        '<option value="" disabled hidden '+(!productVariants.storageType && "selected")+'>- Pilih -</option>' +
                                        '<option value="store" '+(productVariant.storageType === "store" && "selected")+'>Toko</option>' +
                                        '<option value="warehouse" '+(productVariant.storageType === "warehouse" && "selected")+'>Gudang</option>' +
                                    '</select>' +
                                    '<div class="invalid-feedback" id="storageTypeError-'+index+'"></div>' +
                                '</div>' +
                            '</div>' +
                            '<div class="form-group row">' +
                                '<label for="price" class="col-md-5 col-form-label">Harga (Rp)</label>' +
                                '<div class="col-md-7">' +
                                    '<input class="form-control" type="text" name="price['+index+']" id="price['+index+']" value="'+productVariant.price+'" data-key="price" data-index="'+index+'" data-numberonly="true" onchange="onChangeProductVariantInput(this)">' +
                                    '<div class="invalid-feedback" id="priceError-'+index+'"></div>' +
                                '</div>' +
                            '</div>' +
                            '<div class="form-group row">' +
                                '<label for="qty" class="col-md-5 col-form-label">Stok</label>' +
                                '<div class="col-md-7">' +
                                    '<input class="form-control" type="text" name="qty['+index+']" id="qty['+index+']" value="'+productVariant.qty+'" data-key="qty" data-index="'+index+'" data-numberonly="true" onchange="onChangeProductVariantInput(this)">' +
                                    '<div class="invalid-feedback" id="qtyError-'+index+'"></div>' +
                                '</div>' +
                            '</div>' +
                            '<div class="form-group row">' +
                                '<label for="unit" class="col-md-5 col-form-label">Satuan</label>' +
                                '<div class="col-md-7">' +
                                    '<input class="form-control" type="text" name="unit['+index+']" id="unit['+index+']" placeholder="kg, bungkus, karung" value="'+productVariant.unit+'" data-key="unit" data-index="'+index+'" onchange="onChangeProductVariantInput(this)">' +
                                    '<div class="invalid-feedback" id="unitError-'+index+'"></div>' +
                                '</div>' +
                            '</div>' +
                            '<button name="deleteProductVariantBtn" data-index="'+index+'" type="button" class="btn btn-danger">Hapus varian</button>' +
                        '</div>'
                    );
                }
            });

            renderAddVariant();
            initDeleteProductVariant();
            initAllowNumberOnly();
        }

        function renderAddVariant() {
            const el = $("#variant");
            el.append(
                '<button type="button" class="btn btn-primary" id="addProduct">Tambah varian</button>'
            );

            initAddProductVariant();
        }

        function initAddProductVariant() {
            $("#addProduct").click(function() {
                addProductVariant();
            });
        }

        function addProductVariant() {
            productVariantData.push({
                price: "",
                qty: "",
                storageType: "",
                unit: ""
            });

            renderProductVariant(productVariantData);
        }

        function initDeleteProductVariant() {
            $("button[name=deleteProductVariantBtn]").click(function() {
                const dataIndex = $(this).data("index");
                productVariantData.splice(dataIndex, 1);

                if (productVariantData.length === 0) {
                    addProductVariant();
                } else {
                    renderProductVariant(productVariantData);
                }
            });
        }

        function onChangeProductVariantInput(e) {
            const el = $(e);
            const key = el.data("key");
            const value = el.val();
            const index = el.data("index");
            productVariantData[index][key] = value;
        }

        function initAllowNumberOnly() {
            $("*[data-numberonly=true]").on("keypress", function(e) {
                const ASCIICode = e.which ? e.which : e.keyCode;
                if (ASCIICode > 31 && (ASCIICode < 48 || ASCIICode > 57)) {
                    return false;
                }
                return true;
            });
        }

        function initSave() {
            $("form").submit(function(e) {
                e.preventDefault();

                $.ajax({
                    method: "post",
                    url: "/api/product",
                    data: {
                        code: $("#code").val(),
                        name: $("#name").val(),
                        productVariants: productVariantData
                    },
                    success: function(result) {
                        alert("Data tersimpan");
                        $("input").removeClass("is-invalid");
                        $("select").removeClass("is-invalid");
                        window.location.href = "/product";
                    },
                    error: function(error) {
                        alert("Gagal menyimpan data!");
                        errors = error.responseJSON.errors;
                        renderErrorMessage();
                    }
                });
            });
        }
        initSave();

        function renderErrorMessage() {
            if (errors) {
                if (errors.hasOwnProperty("code")) {
                    const msg = errors.code;
                    $("#codeError").text(msg);
                    $("#code").addClass("is-invalid")
                } else {
                    $("#code").removeClass("is-invalid");
                }

                if (errors.hasOwnProperty("name")) {
                    const msg = errors.name;
                    $("#nameError").text(msg);
                    $("#name").addClass("is-invalid")
                } else {
                    $("#name").removeClass("is-invalid");
                }
                
                productVariantData.forEach((productVariant, index) => {
                    if (errors.hasOwnProperty("productVariants["+index+"].storageType")) {
                        const msg = errors["productVariants["+index+"].storageType"];
                        $("#storageTypeError-"+index).text(msg);
                        $("select[name='storageType["+index+"]']").addClass("is-invalid")
                    } else {
                        $("select[name='storageType["+index+"]']").removeClass("is-invalid");
                    }

                    if (errors.hasOwnProperty("productVariants["+index+"].price")) {
                        const msg = errors["productVariants["+index+"].price"];
                        $("#priceError-"+index).text(msg);
                        $("input[name='price["+index+"]']").addClass("is-invalid")
                    } else {
                        $("input[name='price["+index+"]']").removeClass("is-invalid");
                    }

                    if (errors.hasOwnProperty("productVariants["+index+"].qty")) {
                        const msg = errors["productVariants["+index+"].qty"];
                        $("#qtyError-"+index).text(msg);
                        $("input[name='qty["+index+"]']").addClass("is-invalid")
                    } else {
                        $("input[name='qty["+index+"]']").removeClass("is-invalid");
                    }

                    if (errors.hasOwnProperty("productVariants["+index+"].unit")) {
                        const msg = errors["productVariants["+index+"].unit"];
                        $("#unitError-"+index).text(msg);
                        $("input[name='unit["+index+"]']").addClass("is-invalid")
                    } else {
                        $("input[name='unit["+index+"]']").removeClass("is-invalid");
                    }
                });
            }
        }
    </script>
</body>
</html>