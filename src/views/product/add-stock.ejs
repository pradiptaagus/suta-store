<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tambah Stok</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <%- include("../partials/navbar.ejs") -%>
    <div class="container my-5">
        <h1 class="mb-3" id="title">Tambah Stok</h1>
        <form method="put">
            <div class="row mb-3">
                <div class="col-12 col-md-3">Kode produk</div>
                <div class="col-9">
                    <span class="d-none d-md-inline-block">:</span>
                    <span id="code"></span>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12 col-md-3">Nama produk</div>
                <div class="col-9">
                    <span class="d-none d-md-inline-block">:</span>
                    <span id="name"></span>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12 col-md-3">Lokasi penyimpanan</div>
                <div class="col-9">
                    <select class="custom-select input-select" name="storageType" id="storageType">
                        <option value="store">Toko</option>
                        <option value="warehouse">Gudang</option>
                    </select>
                    <div class="invalid-feedback" id="storageTypeError"></div>
                </div>
            </div>
            <div class="form-group row">
                <label for="addition-stock" id="stock-operation" class="col-12 col-md-3 col-form-label">Stok yang ditambahkan</label>
                <div class="col-9">
                    <input class="form-control input-stock" type="text" name="addition-stock" id="addition-stock" placeholder="Contoh: 100" data-numberonly="true" onkeyup="handleAdditionQtyChange(this)">
                    <small id="stock-operation-message">Jumlah stok yang ditambahkan mengikuti satuan terbesar</small>
                    <div class="invalid-feedback" id="addition-stock-error"></div>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12 col-md-3 mb-3 mb-md-0">Varian</div>
                <div class="col-12 col-md-9" id="variant"></div>
            </div>            
            <a href="/product/stock-management" class="btn btn-secondary">Kembali</a>
            <button class="btn btn-success ml-2">Simpan perubahan</button>
        </form>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js"></script>
    <script src="/js/helper.js"></script>
    <script>
        let data = {};
        let additionQty = 0;
        

        const params = new URLSearchParams(window.location.search);
        const operation = params.get("operation") == 'delete' ? 'delete' : 'add'

        $("document").ready(function() {
            fetchData("<%=id%>");
            initSave();
            initAllowNumberOnly();
            $("#title").text(operation == "delete" ? "Hapus Stok" : "Tambah")
            $("#stock-operation").text(operation == "delete" ? "Jumlah Stok yang dikurangi" : "Jumlah Stok yang ditambahkan")
            $("#stock-operation-message").text(operation == "delete" ? "Jumlah stok yang dikurangi mengikuti satuan terbesar" : "Jumlah stok yang ditambahkan mengikuti satuan terbesar")
            $("#storageType").change(function(e) {
                renderProductVariant(data);
                calculateOldStock();
            })
        });

        function fetchData(id) {
            $.ajax({
                method: "get",
                url: "/api/product/" + id,
                contentType: "application/json",
                success: function(result) {
                    data = result.data;
                    $("#code").text(data.code);
                    $("#name").text(data.name);
                    // $("#storage-type").text(data.storageType);

                    renderProductVariant(data);
                    calculateOldStock();

                }, error: function(error) {
                    console.log(error);
                }
            });
        }

        function renderProductVariant(data) {
            const el = $("#variant");
            el.html("");
            data.productVariant.forEach((productVariant, index) => {
                if (!productVariant.deletedAt) {
                    el.append(
                        '<div class="border rounded p-3 w-100 mb-3">' +
                            '<div class="mb-3 font-weight-bold">Variant ke-'+(index + 1)+'</div>' +
                            '<div class="row mb-3">' +
                                '<div class="col-md-5">Satuan</div>' +
                                '<div class="col-md-7"><span class="d-none d-md-inline-block">:</span> ' + capitalize(productVariant.unit) + '</div>' +
                            '</div>' +
                            '<div class="row mb-3">' +
                                '<div class="col-md-5">Harga</div>' +
                                '<div class="col-md-7"><span class="d-none d-md-inline-block">:</span> ' + (rupiahFormat(productVariant.price)) + '</div>' +
                            '</div>' +
                            '<div class="row">' +
                                '<div class="col-md-5">Stok lama</div>' +
                                '<div class="col-md-7"><span class="d-none d-md-inline-block">:</span> <span id="old-stock-'+index+'"></span></div>' +
                            '</div>' +
                            '<div class="row mt-3 text-success">' +
                                '<div class="col-md-5">Stok baru</div>' +
                                '<div class="col-md-7"><span class="d-none d-md-inline-block">:</span> <span id="new-stock-'+index+'"></span></div>' +
                            '</div>' +
                        '</div>'
                    );
                }
            });
        }

        function capitalize(str) {
            let res = str.toLowerCase()
            res = str[0].toUpperCase() + res.substring(1);
            return res;
        }

        function handleAdditionQtyChange(e) {
            const el = $(e);
            const value = +el.val();
            calculateNewStock(value);
        }

        // Calculate new stock
        // Formula: if productVariant have child, newQty = oldQty + additionQty. 
        // Else, newQty = oldQty + Math.floor(additionQty / qtyPerUnit)
        function calculateNewStock(qty) {
            let qtyPerUnits = data.productVariant.map((item) => item.qtyPerUnit);
            const isStore = $("#storageType").val() == "store";

            qtyPerUnits.forEach((item) => {
                qty = qty * item
            });

            const oldQty = (isStore) ? data.qtyStore : data.qtyWarehouse;
            const currentQuantity = oldQty + (operation == "add") ? qty : -qty;
            additionQty = qty;

            let realQuantityPerUnits = [];

            for (let i = 0; i < qtyPerUnits.length; i++) {
                let temp = qtyPerUnits[i];

                for (let j = i + 1; j < qtyPerUnits.length; j++) {
                    temp = temp * qtyPerUnits[j];
                }

                realQuantityPerUnits.push(temp);
            }

            for (let i = 0; i < data.productVariant.length; i++) {
                const newQty = Math.floor(currentQuantity / realQuantityPerUnits[i]);
                $("#new-stock-"+i).text(newQty + " (" + capitalize(data.productVariant[i].unit) + ")");
            }
        }

        function calculateOldStock() {
            let qtyPerUnits = data.productVariant.map((item) => item.qtyPerUnit);
            const isStore = $("#storageType").val() == "store";

            const currentQuantity = (isStore) ? data.qtyStore : data.qtyWarehouse;

            let realQuantityPerUnits = [];

            for (let i = 0; i < qtyPerUnits.length; i++) {
                let temp = qtyPerUnits[i];

                for (let j = i + 1; j < qtyPerUnits.length; j++) {
                    temp = temp * qtyPerUnits[j];
                }

                realQuantityPerUnits.push(temp);
            }

            for (let i = 0; i < data.productVariant.length; i++) {
                const newQty = Math.floor(currentQuantity / realQuantityPerUnits[i]);
                $("#old-stock-"+i).text(newQty + " (" + capitalize(data.productVariant[i].unit) + ")");
            }
        }

        function initSave() {
            $("form").submit(function(e) {
                e.preventDefault();
                $.ajax({
                    url: "/api/product/update-stock/<%=id%>",
                    method: "put",
                    data: {
                        additionQty: additionQty,
                        qtyType: $("#storageType").val()
                    },
                    success: function(result) {
                        alert("Stock berhasil ditambahkan.");
                        window.location.reload(false); 
                    },
                    error: function(error) {
                        console.log(error);
                    }
                });
            });
        }
    </script>
</body>
</html>